{"remainingRequest":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\lewd\\projects\\spikereport\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lewd\\projects\\spikereport\\src\\components\\report.vue?vue&type=template&id=2f693578&","dependencies":[{"path":"C:\\Users\\lewd\\projects\\spikereport\\src\\components\\report.vue","mtime":1547402569851},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container\" }, [\n    _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"form\", { attrs: { id: \"report\" } }, [\n        _c(\"p\", [\n          _vm._v(\n            \"\\n            In which country did you get, or suspect you got, spiked?\\n            \"\n          ),\n          _c(\"br\"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.country,\n                expression: \"country\"\n              }\n            ],\n            attrs: { type: \"text\" },\n            domProps: { value: _vm.country },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.country = $event.target.value\n              }\n            }\n          }),\n          _vm._v(\"\\n            \" + _vm._s(_vm.country) + \"\\n        \")\n        ]),\n        _c(\"p\", [\n          _vm._v(\n            \"\\n            In which city did you get, or suspect you got, spiked?\"\n          ),\n          _c(\"br\"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.city,\n                expression: \"city\"\n              }\n            ],\n            attrs: { type: \"text\" },\n            domProps: { value: _vm.city },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.city = $event.target.value\n              }\n            }\n          }),\n          _vm._v(\"\\n            \" + _vm._s(_vm.city) + \"\\n        \")\n        ]),\n        _c(\"p\", [\n          _vm._v(\n            \"\\n            In which location did you get, or do you suspect, you got spiked?\"\n          ),\n          _c(\"br\"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.location,\n                expression: \"location\"\n              }\n            ],\n            attrs: { type: \"text\" },\n            domProps: { value: _vm.location },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.location = $event.target.value\n              }\n            }\n          })\n        ]),\n        _c(\"p\", [\n          _vm._v(\n            \"On which day (approximately) did you, or do you suspect, you got spiked?\"\n          ),\n          _c(\"br\"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.date,\n                expression: \"date\"\n              }\n            ],\n            attrs: { type: \"date\" },\n            domProps: { value: _vm.date },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.date = $event.target.value\n              }\n            }\n          }),\n          _vm._v(\"\\n            \" + _vm._s(_vm.date) + \"\\n        \")\n        ]),\n        _c(\"p\", [\n          _vm._v(\"What time do you estimate you got spiked?\\n        \"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.time,\n                expression: \"time\"\n              }\n            ],\n            attrs: { type: \"time\" },\n            domProps: { value: _vm.time },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.time = $event.target.value\n              }\n            }\n          }),\n          _vm._v(\"\\n            \" + _vm._s(_vm.time) + \"\\n        \")\n        ]),\n        _c(\"br\"),\n        _c(\"br\"),\n        _vm._v(\n          \"\\n        The following questions are optional. However, it can help researchers and law enforcement\\n        alike if you decide to answer them. All of this data will be handled anonymously.\\n        \"\n        ),\n        _c(\"br\"),\n        _c(\"p\", [\n          _vm._v(\"Age\\n            \"),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.age,\n                expression: \"age\"\n              }\n            ],\n            attrs: { type: \"number\" },\n            domProps: { value: _vm.age },\n            on: {\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.age = $event.target.value\n              }\n            }\n          }),\n          _vm._v(\"\\n            \" + _vm._s(_vm.age) + \"\\n        \")\n        ]),\n        _vm._m(0),\n        _vm._m(1),\n        _c(\"br\"),\n        _vm._m(2),\n        _vm._m(3),\n        _vm._m(4)\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Biological Gender\\n            \"),\n      _c(\"select\", [\n        _c(\"option\", { attrs: { value: \"male\" } }, [_vm._v(\"Male\")]),\n        _c(\"option\", { attrs: { value: \"female\" } }, [_vm._v(\"Female\")]),\n        _c(\"option\", { attrs: { value: \"other\" } }, [_vm._v(\"Other\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Sexual Orientation\\n            \"),\n      _c(\"select\", [\n        _c(\"option\", { attrs: { value: \"heterosexual\" } }, [\n          _vm._v(\"Straight\")\n        ]),\n        _c(\"option\", { attrs: { value: \"homosexual\" } }, [_vm._v(\"Gay\")]),\n        _c(\"option\", { attrs: { value: \"bisexual\" } }, [_vm._v(\"Bisexual\")]),\n        _c(\"option\", { attrs: { value: \"transgender\" } }, [_vm._v(\"Trans\")]),\n        _c(\"option\", { attrs: { value: \"other\" } }, [_vm._v(\"Other\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Effects noticed during or after the incident\"),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"drowsy\", name: \"drowsy\" }\n      }),\n      _c(\"label\", { attrs: { for: \"drowsy\" } }, [\n        _vm._v(\" Extreme Drowsiness\")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"concentration\", name: \"concentration\" }\n      }),\n      _c(\"label\", { attrs: { for: \"concentration\" } }, [\n        _vm._v(\" Inability to concentrate\")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"breathing\", name: \"breathing\" }\n      }),\n      _c(\"label\", { attrs: { for: \"breathing\" } }, [\n        _vm._v(\" Difficulty breathing\")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: {\n          type: \"checkbox\",\n          id: \"heartbeat_slow\",\n          name: \"heartbeat_slow\"\n        }\n      }),\n      _c(\"label\", { attrs: { for: \"heartbeat_slow\" } }, [\n        _vm._v(\" Decrease in heartrate\")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"hearbeat_fast\", name: \"heartbeat_fast\" }\n      }),\n      _c(\"label\", { attrs: { for: \"heartbeat_fast\" } }, [\n        _vm._v(\" Increase in heartrate \")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"disinhibition\", name: \"disinhibition\" }\n      }),\n      _c(\"label\", { attrs: { for: \"disinhibition\" } }, [\n        _vm._v(\" Loss of inhibitions \")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"drunkness_inc\", name: \"drunkness_inc\" }\n      }),\n      _c(\"label\", { attrs: { for: \"drunkness_inc\" } }, [\n        _vm._v(\" Sudden increase in drunkness\")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"drunkness_dec\", name: \"drunkness_dec\" }\n      }),\n      _c(\"label\", { attrs: { for: \"druckness_dec\" } }, [\n        _vm._v(\" Did not notice drunkness \")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"unconcious\", name: \"unconcious\" }\n      }),\n      _c(\"label\", { attrs: { for: \"unconcious\" } }, [\n        _vm._v(\"Loss of conciousness\")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"vomiting\", name: \"vomiting\" }\n      }),\n      _c(\"label\", { attrs: { for: \"vomiting\" } }, [_vm._v(\"Vomiting\")]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"emotion\", name: \"emotion\" }\n      }),\n      _c(\"label\", { attrs: { for: \"emotion\" } }, [_vm._v(\"Loss of emotion\")]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"coordination\", name: \"coordination\" }\n      }),\n      _c(\"label\", { attrs: { for: \"coordination\" } }, [\n        _vm._v(\"Loss of coordination\")\n      ]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"euphoria\", name: \"euphoria\" }\n      }),\n      _c(\"label\", { attrs: { for: \"euphoria\" } }, [_vm._v(\"Euphoria\")]),\n      _c(\"br\"),\n      _c(\"input\", {\n        attrs: { type: \"checkbox\", id: \"grandiosity\", name: \"grandiosity\" }\n      }),\n      _c(\"label\", { attrs: { for: \"grandiosity\" } }, [\n        _vm._v('Sense of grandiosity(\"On top of the world\")')\n      ]),\n      _c(\"br\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Description of incident\"),\n      _c(\"br\"),\n      _c(\"textarea\", { attrs: { cols: \"60\", rows: \"20\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"\\n            Submit\"),\n      _c(\"br\"),\n      _c(\"input\", { attrs: { type: \"submit\" } })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}