{"remainingRequest":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\lewd\\projects\\spikereport\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lewd\\projects\\spikereport\\src\\components\\report.vue?vue&type=template&id=2f693578&","dependencies":[{"path":"C:\\Users\\lewd\\projects\\spikereport\\src\\components\\report.vue","mtime":1547395808737},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lewd\\projects\\spikereport\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"report\" }, [\n    _c(\"form\", { attrs: { id: \"report\" } }, [\n      _c(\"p\", [\n        _vm._v(\n          \"\\n            In which country did you get, or suspect you got, spiked?\\n            \"\n        ),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.country,\n              expression: \"country\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.country },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.country = $event.target.value\n            }\n          }\n        }),\n        _vm._v(\"\\n            \" + _vm._s(_vm.country) + \"\\n        \")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"\\n            In which city did you get, or suspect you got, spiked?\"\n        ),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.city,\n              expression: \"city\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.city },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.city = $event.target.value\n            }\n          }\n        }),\n        _vm._v(\"\\n            \" + _vm._s(_vm.city) + \"\\n        \")\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"\\n            In which location did you get, or do you suspect, you got spiked?\"\n        ),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.location,\n              expression: \"location\"\n            }\n          ],\n          attrs: { type: \"text\" },\n          domProps: { value: _vm.location },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.location = $event.target.value\n            }\n          }\n        })\n      ]),\n      _c(\"p\", [\n        _vm._v(\n          \"On which day (approximately) did you, or do you suspect, you got spiked?\"\n        ),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.date,\n              expression: \"date\"\n            }\n          ],\n          attrs: { type: \"date\" },\n          domProps: { value: _vm.date },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.date = $event.target.value\n            }\n          }\n        }),\n        _vm._v(\"\\n            \" + _vm._s(_vm.date) + \"\\n        \")\n      ]),\n      _c(\"p\", [\n        _vm._v(\"What time do you estimate you got spiked?\\n        \"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.time,\n              expression: \"time\"\n            }\n          ],\n          attrs: { type: \"time\" },\n          domProps: { value: _vm.time },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.time = $event.target.value\n            }\n          }\n        }),\n        _vm._v(\"\\n            \" + _vm._s(_vm.time) + \"\\n        \")\n      ]),\n      _c(\"br\"),\n      _c(\"br\"),\n      _vm._v(\n        \"\\n        The following questions are optional. However, it can help researchers and law enforcement\\n        alike if you decide to answer them. All of this data will be handled anonymously.\\n        \"\n      ),\n      _c(\"br\"),\n      _c(\"p\", [\n        _vm._v(\"Age\\n            \"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.age,\n              expression: \"age\"\n            }\n          ],\n          attrs: { type: \"number\" },\n          domProps: { value: _vm.age },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.age = $event.target.value\n            }\n          }\n        }),\n        _vm._v(\"\\n            \" + _vm._s(_vm.age) + \"\\n        \")\n      ]),\n      _vm._m(0),\n      _vm._m(1),\n      _c(\"br\"),\n      _vm._m(2),\n      _vm._m(3)\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Biological Gender\\n            \"),\n      _c(\"select\", [\n        _c(\"option\", { attrs: { value: \"male\" } }, [_vm._v(\"Male\")]),\n        _c(\"option\", { attrs: { value: \"female\" } }, [_vm._v(\"Female\")]),\n        _c(\"option\", { attrs: { value: \"other\" } }, [_vm._v(\"Other\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Sexual Orientation\\n            \"),\n      _c(\"select\", [\n        _c(\"option\", { attrs: { value: \"heterosexual\" } }, [\n          _vm._v(\"Straight\")\n        ]),\n        _c(\"option\", { attrs: { value: \"homosexual\" } }, [_vm._v(\"Gay\")]),\n        _c(\"option\", { attrs: { value: \"bisexual\" } }, [_vm._v(\"Bisexual\")]),\n        _c(\"option\", { attrs: { value: \"transgender\" } }, [_vm._v(\"Trans\")]),\n        _c(\"option\", { attrs: { value: \"other\" } }, [_vm._v(\"Other\")])\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"Description of incident\"),\n      _c(\"br\"),\n      _c(\"textarea\", { attrs: { cols: \"20\", rows: \"20\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"p\", [\n      _vm._v(\"\\n            Submit\"),\n      _c(\"br\"),\n      _c(\"input\", { attrs: { type: \"submit\" } })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}